/*
 * File: app/view/WindowFuncionario.js
 *
 * This file was generated by Sencha Architect version 4.2.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.6.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.6.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('rsistemp.view.WindowFuncionario', {
    extend: 'Ext.window.Window',
    alias: 'widget.windowfuncionario',

    requires: [
        'rsistemp.view.WindowFuncionarioViewModel',
        'Ext.toolbar.Toolbar',
        'Ext.toolbar.Fill',
        'Ext.button.Button',
        'Ext.form.Panel',
        'Ext.form.field.Hidden',
        'Ext.form.field.Date',
        'Ext.form.field.Number',
        'Ext.form.RadioGroup',
        'Ext.form.field.Radio',
        'Ext.form.field.ComboBox'
    ],

    viewModel: {
        type: 'windowfuncionario'
    },
    modal: true,
    autoShow: true,
    height: '',
    itemId: 'WindowFuncionario',
    modelValidation: false,
    width: 430,
    layout: 'fit',
    icon: 'resources/images/grid.png',
    title: 'Cadastro de Funcionário',
    defaultListenerScope: true,

    dockedItems: [
        {
            xtype: 'toolbar',
            dock: 'bottom',
            items: [
                {
                    xtype: 'tbfill'
                },
                {
                    xtype: 'button',
                    dock: 'bottom',
                    icon: 'resources/images/save.gif',
                    text: 'Salvar',
                    listeners: {
                        click: 'onButtonClick'
                    }
                },
                {
                    xtype: 'button',
                    icon: 'resources/images/cross.png',
                    text: 'Fechar',
                    listeners: {
                        click: 'onButtonClick1'
                    }
                }
            ]
        }
    ],
    items: [
        {
            xtype: 'form',
            reference: 'form',
            anchor: '100%',
            autoShow: true,
            height: '',
            id: 'formulario',
            itemId: 'formulario',
            bodyPadding: 10,
            bodyStyle: '',
            title: '',
            url: '../../app/rsistemp.php?action=funcionario&metodo=inserir_Funcionario',
            items: [
                {
                    xtype: 'hiddenfield',
                    fieldLabel: 'ID',
                    name: 'funcionario_id'
                },
                {
                    xtype: 'textfield',
                    anchor: '100%',
                    flex: 1,
                    width: 359,
                    fieldLabel: 'Nome',
                    msgTarget: 'side',
                    name: 'nome',
                    allowBlank: false,
                    emptyText: 'Nome'
                },
                {
                    xtype: 'textfield',
                    anchor: '100%',
                    flex: 1,
                    width: 357,
                    fieldLabel: 'Sobrenome',
                    name: 'sobrenome',
                    allowBlank: false,
                    emptyText: 'sobrenome',
                    maxLength: 30,
                    minLength: 2
                },
                {
                    xtype: 'datefield',
                    anchor: '100%',
                    flex: 1,
                    width: 359,
                    fieldLabel: 'Data de Nascimento',
                    msgTarget: 'side',
                    name: 'dtnascimento',
                    allowBlank: false,
                    maxLength: 30,
                    altFormats: 'd/m/Y|dmY|dmy|d/m/y',
                    format: 'd/m/Y'
                },
                {
                    xtype: 'numberfield',
                    anchor: '100%',
                    flex: 1,
                    width: 357,
                    fieldLabel: 'Idade',
                    name: 'idade',
                    maxValue: 100
                },
                {
                    xtype: 'radiogroup',
                    anchor: '100%',
                    flex: 1,
                    itemId: 'sexo',
                    width: 332,
                    fieldLabel: 'Sexo',
                    fieldDefaults: {
                        name: 'sexo'
                    },
                    allowBlank: false,
                    simpleValue: true,
                    items: [
                        {
                            xtype: 'radiofield',
                            itemId: 'Feminino',
                            name: 'sexo',
                            boxLabel: 'Feminino',
                            checked: true,
                            inputValue: 'F'
                        },
                        {
                            xtype: 'radiofield',
                            itemId: 'Masculino',
                            name: 'sexo',
                            boxLabel: 'Masculino',
                            inputValue: 'M'
                        }
                    ]
                },
                {
                    xtype: 'textfield',
                    anchor: '100%',
                    flex: 1,
                    width: 352,
                    fieldLabel: 'Salário',
                    name: 'salario',
                    allowBlank: false,
                    hideTrigger: true
                },
                {
                    xtype: 'textfield',
                    anchor: '100%',
                    flex: 1,
                    width: 351,
                    fieldLabel: 'Telefone',
                    name: 'telefone',
                    allowBlank: false
                },
                {
                    xtype: 'textfield',
                    anchor: '100%',
                    flex: 1,
                    width: 348,
                    fieldLabel: 'Email',
                    name: 'email',
                    allowBlank: false,
                    emptyText: 'mail@example.com',
                    maxLength: 50,
                    minLength: 5,
                    regex: /^([0-9a-zA-Z]+[\-._+&amp;])*[0-9a-zA-Z]+@([\-0-9a-zA-Z]+[.])+[a-zA-Z]{2,6}$/,
                    regexText: 'Please provide a valid email'
                },
                {
                    xtype: 'container',
                    height: '',
                    margin: '',
                    minHeight: 25,
                    padding: '',
                    layout: 'column',
                    items: [
                        {
                            xtype: 'combobox',
                            columnWidth: 1,
                            formBind: false,
                            anchor: '',
                            fieldLabel: 'Cargo',
                            name: 'cargo_id',
                            allowBlank: false,
                            displayField: 'desc_cargo',
                            forceSelection: true,
                            minChars: 3,
                            pageSize: 25,
                            queryCaching: false,
                            store: 'StoreCargo',
                            valueField: 'cargo_id',
                            listeners: {
                                beforerender: 'onComboboxBeforeRender'
                            }
                        },
                        {
                            xtype: 'button',
                            margin: '0 0 0 5',
                            width: 28,
                            icon: 'resources/images/add.png',
                            listeners: {
                                click: 'onButtonClick2'
                            }
                        }
                    ]
                },
                {
                    xtype: 'container',
                    minHeight: 25,
                    layout: 'column',
                    items: [
                        {
                            xtype: 'combobox',
                            columnWidth: 1,
                            fieldLabel: 'Setor',
                            name: 'setor_id',
                            allowBlank: false,
                            displayField: 'desc_setor',
                            forceSelection: true,
                            minChars: 3,
                            pageSize: 25,
                            queryCaching: false,
                            store: 'StoreSetor',
                            valueField: 'setor_id',
                            listeners: {
                                beforequery: 'onComboboxBeforeQuery'
                            }
                        },
                        {
                            xtype: 'button',
                            margin: '0 0 0 5',
                            width: 28,
                            icon: 'resources/images/add.png',
                            listeners: {
                                click: 'onButtonClick3'
                            }
                        }
                    ]
                },
                {
                    xtype: 'container',
                    layout: 'column',
                    items: [
                        {
                            xtype: 'combobox',
                            columnWidth: 1,
                            fieldLabel: 'SubSetor',
                            name: 'subsetor_id',
                            allowBlank: false,
                            displayField: 'desc_subsetor',
                            minChars: 3,
                            pageSize: 25,
                            queryCaching: false,
                            store: 'StoreSubSetor',
                            valueField: 'subsetor_id'
                        },
                        {
                            xtype: 'button',
                            margin: '0 0 0 5',
                            width: 28,
                            icon: 'resources/images/add.png',
                            listeners: {
                                click: 'onButtonClick4'
                            }
                        }
                    ]
                }
            ]
        }
    ],

    onButtonClick: function(button, e, eOpts) {
        var formPrincipal = this.down('form');//this - Janela -
        var id   = formPrincipal.getForm().findField('funcionario_id').getValue();
        var win = this;
        var campo01 = formPrincipal.getForm().findField('nome');
        var grid = Ext.ComponentQuery.query('grid[itemId=gridFuncionario]')[0];

        if( formPrincipal.getForm().isValid() ){
            formPrincipal.getForm().submit({
                success: function(form, action) {
                    //Ext.Msg.alert('Success', action.result.msg);
                    if (id === '' || id === null) {
                        formPrincipal.getForm().reset(true);
                        if (win.carregaStore===true)
                        {
                            grid. getStore().removeAll();
                            grid.getStore().load();
                        }
                        campo01.focus(false,true);
                        rsistemp.getApplication().Msg('Registro incluído com sucesso');

                    } else {
                        win.close();
                    }
                },
                failure: function(form, action) {
        //          Ext.Msg.alert('Success','Registro incluído com sucesso!');
                    //Ext.Msg.alert('Success', action.result.msg);
                    Ext.Msg.show({
                        title:'Atenção',
                        msg: action.result.msg,
                        buttons: Ext.Msg.OK,
                        icon: Ext.Msg.WARNING
                    });
                }
            });
        }
    },

    onButtonClick1: function(button, e, eOpts) {
        this.close();

    },

    onComboboxBeforeRender: function(component, eOpts) {

        component.getStore().load();
    },

    onButtonClick2: function(button, e, eOpts) {
        var win = Ext.create('rsistemp.view.WindowCargo');
        var grid = this;
        win.show();

    },

    onComboboxBeforeQuery: function(queryPlan, eOpts) {
        var setor_id = this.down('form').getForm().findField('setor_id').getValue();
        var subsetor = this.down('form').getForm().findField('subsetor_id').getStore().getProxy();
        subsetor.extraParams.forn_id = setor_id;

        var subsetor = queryPlan.combo.getStore().getProxy();   // pega a story do combo ativo
        subsetor.extraParams.forn_id = setor_id;  // seta um parametro
    },

    onButtonClick3: function(button, e, eOpts) {
        var win = Ext.create('rsistemp.view.WindowSetor');
        var grid = this;


        win.show();
    },

    onButtonClick4: function(button, e, eOpts) {
        var win = Ext.create('rsistemp.view.WindowSubsetor');
        var grid = this;

        win.show();
    }

});