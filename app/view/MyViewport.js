/*
 * File: app/view/MyViewport.js
 *
 * This file was generated by Sencha Architect version 4.2.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.6.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.6.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('rsistemp.view.MyViewport', {
    extend: 'Ext.container.Viewport',
    alias: 'widget.myviewport',

    requires: [
        'rsistemp.view.MyViewportViewModel',
        'Ext.tree.Panel',
        'Ext.tree.View'
    ],

    viewModel: {
        type: 'myviewport'
    },
    height: 250,
    itemId: 'myViewport',
    width: 400,
    layout: 'border',
    defaultListenerScope: true,

    items: [
        {
            xtype: 'treepanel',
            collapseMode: 'header',
            region: 'west',
            width: 150,
            animCollapse: '',
            collapsed: true,
            collapsible: true,
            icon: '',
            title: 'Menu',
            root: {
                expanded: false,
                children: [
                    {
                        text: 'Cadastro',
                        expanded: false,
                        children: [
                            {
                                text: 'Funcionário',
                                id: 'gridFuncionario',
                                leaf: true
                            },
                            {
                                text: 'Cargo',
                                id: 'gridCargo',
                                leaf: true
                            },
                            {
                                text: 'Setor',
                                id: 'gridSetor',
                                leaf: true
                            },
                            {
                                text: 'Subsetor',
                                id: 'gridSubSetor',
                                leaf: true
                            }
                        ]
                    },
                    //{text:"Relatório", id:"relatorio_funcionario", leaf: true}
                ]
            },
            rootVisible: false,
            viewConfig: {
                height: '',
                width: ''
            },
            listeners: {
                itemclick: 'onTreepanelItemClick'
            }
        },
        {
            xtype: 'panel',
            region: 'center',
            itemId: 'panelCentral',
            layout: 'fit'
        }
    ],

    onTreepanelItemClick: function(dataview, record, item, index, e, eOpts) {

        //buscando itemid do component panel
        var central = Ext.ComponentQuery.query('panel[itemId=panelCentral]')[0];
        central.removeAll();

        if (record.data.id == 'gridFuncionario') {
            var grid = Ext.create('rsistemp.view.gridFuncionario');
            central.add(grid);
            grid.getStore().getProxy().extraParams = {};
            grid.getStore().load();

        }

        if (record.data.id == 'gridCargo'){
            var grid = Ext.create('rsistemp.view.gridCargo');
            central.add(grid);
            grid.getStore().getProxy().extraParams = {};
            grid.getStore().load();
        }

        if (record.data.id == 'gridSetor'){
            var grid = Ext.create('rsistemp.view.gridSetor');
            central.add(grid);
            grid.getStore().getProxy().extraParams = {};
            grid.getStore().load();
        }

        if (record.data.id == 'gridSubSetor'){
            var grid = Ext.create('rsistemp.view.gridSubSetor');
            central.add(grid);
            grid.getStore().getProxy().extraParams = {};
            grid.getStore().load();
        }

    }

});